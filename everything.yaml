---
- hosts: webservers
  name: Base installation
  tags:
    - base
  tasks:
    - name: Install git and more todo
      become: yes
      dnf:
        name:
          - git
    - name: Copy across SSH keys for git purposes
      copy:    
        src: "{{ item }}"
        dest: "/home/{{ unix_user }}/.ssh/"
        owner: "{{ unix_user }}"
        mode: 0600
      with_fileglob:
          - "{{ host_ssh_source }}/id_rsa*"
    - name: Make /var/www directory
      become: yes
      file:
        path: /var/www
        state: directory
        owner: "{{ unix_user }}"
        mode: '0777'
    - name: Put SELinux into Permissive mode
      become: yes
      command: setenforce 0

- hosts: dbservers
  name: Install MySQL 8
  tags:
    - db
  vars:
    user: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
  remote_user: "{{ user }}"
  become: yes
  tasks:
    - name: Install MySQL 8 and Python3 PyMySQL
      dnf:
        name:
          - mysql-server 
          - mysql
          - python3-PyMySQL
        state: latest
    - name: Start and enable MySQL 8
      systemd:
        name: mysqld
        enabled: true
        state: started
    - name: Removes anonymous user account for localhost
      mysql_user:
        name: ''
        host_all: yes
        state: absent
    - name: Create database user with name {{ user }} with all database privileges
      mysql_user:
        name: "{{ user }}"
        password: "{{ password }}"
        priv: '*.*:ALL'
        state: present

- hosts: webservers
  name: Install Net Worth site
  tags:
    - net_worth
  vars:
    unix_user: "{{ unix_user }}"
  tasks:
  - name: Pull net-worth image
    podman_image:
      name: quay.io/banool/net-worth
      tag: latest
  - name: Actually repull net-worth image
    command: podman pull quay.io/banool/net-worth
  - name: Create systemd spec file
    become: yes
    vars:
      allowed_sites: "{{ net_worth.allowed_sites }}"
      deployment_mode: "{{ net_worth.deployment_mode }}"
      secret_key: "{{ net_worth.secret_key }}"
      sql_engine: "{{ net_worth.sql_engine }}"
      sql_database: "{{ net_worth.sql_database }}"
      sql_user: "{{ mysql_user }}"
      sql_password: "{{ mysql_password}}"
      sql_host: "{{ net_worth.sql_host}}"
      sql_port: "{{ net_worth.sql_port}}"
      robinhood_username: "{{ net_worth.robinhood_username }}"
      robinhood_password: "{{ net_worth.robinhood_password }}"
      robinhood_2fa_barcode: "{{ net_worth.robinhood_2fa_barcode }}"
      personal_capital_email: "{{ net_worth.personal_capital_email }}"
      personal_capital_password: "{{ net_worth.personal_capital_password }}"
      ui_username: "{{ net_worth.ui_username }}"
      ui_email: "{{ net_worth.ui_email }}"
      ui_password: "{{ net_worth.ui_password }}"
      internal_port: "{{ net_worth.internal_port }}"
      external_port: "{{ net_worth.external_port }}"
    template:
      src: templates/net-worth.service.j2
      dest: /etc/systemd/system/net-worth.service
      owner: "{{ unix_user }}"
      group: wheel
      mode: '0644'
  - name: Make net worth database in MySQL
    mysql_db:
      name: "{{ net_worth.sql_database }}"
      state: present
      login_user: "{{ mysql_user }}"
      login_password: "{{ mysql_password }}"
      
  - name: Start and enable net-worth service
    become: yes
    systemd:
      name: net-worth
      daemon_reload: true
      enabled: true
      state: restarted

- hosts: webservers
  name: Install dport site
  tags:
    - dport
  vars:
    unix_user: "{{ unix_user }}"
  tasks:
    - git:
        repo: git@gitlab.com:banool/dport-site.git
        dest: /var/www/dport

- hosts: webservers
  become: true
  roles:
    - role: nginxinc.nginx
  tags: nginx
  tasks:
    - name: Make /etc/nginx/sites-available
      file:
        path: /etc/nginx/sites-available
        state: directory
        mode: '0755'
    - name: Make symlink for sites-available called sites-enabled
      file:
        src: /etc/nginx/sites-available
        dest: /etc/nginx/sites-enabled
        state: link
    - name: Delete /etc/nginx/conf.d
      file:
        path: /etc/nginx/conf.d
        state: absent
    - name: Use sites-enabled instead of conf.d
      replace:
        path: /etc/nginx/nginx.conf
        regexp: 'include /etc/nginx/conf.d/\*.conf;'
        replace: 'include /etc/nginx/sites-enabled/*;'
    - name: Restart nginx
      systemd:
        name: nginx
        state: restarted
  vars:
    nginx_http_template_enable: true
    nginx_http_template:
      dport:
        template_file: http/default.conf.j2
        conf_file_name: dport
        conf_file_location: /etc/nginx/sites-available
        servers:
          server1:
            listen:
              listen_localhost:
                port: 80
            root: /var/www/dport
            server_name: "{{ server_name }} www.{{ server_name }} {{ ip_address }}"
            error_page: /usr/share/nginx/html
            autoindex: false

# TODO
# Nginx
# All other sites
# Crons
# Deluge
# Plex
# External HDD mounts
# Turning off the screen
# History for net worth
# certbot
